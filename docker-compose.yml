services:

  database:
    image: postgres:16-alpine
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgresql/db_entities.sql:/docker-entrypoint-initdb.d/db_entities.sql
    restart: unless-stopped
    expose:
      - ${PORT_POSTGRES}
    ports:
      - "${PORT_POSTGRES}:${PORT_POSTGRES}"
    networks:
      - internal
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      COMPOSE_HTTP_TIMEOUT: ${COMPOSE_HTTP_TIMEOUT}

  backend:
    build:
      context: ./back-nestjs
    volumes:
      - ./back-nestjs:/app
      - nestjs_modules:/app/node_modules
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - database
    expose:
      - "${PORT_BACKEND}"
      - "${PORT_WS_BACKEND}"
    ports:
      - "${PORT_BACKEND}:${PORT_BACKEND}"
      - "${PORT_WS_BACKEND}:${PORT_WS_BACKEND}"
    networks:
      - internal

  frontend:
    build:
      context: ./front-vite
    volumes:
      - ./front-vite:/app
      - react_modules:/app/node_modules
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - backend
    expose:
      - "${PORT_FRONTEND}"
    ports:
      - "${PORT_FRONTEND}:${PORT_FRONTEND}"
    networks:
      - internal

volumes:
  pgdata:
  react_modules:
  nestjs_modules:

networks:
  internal:
    driver: bridge
